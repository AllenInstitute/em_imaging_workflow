executables:
    mock:
        name: 'Mock Executable'
        path: '/example_data/bin/mock_executable'
        pbs_queue: 'mindscope'
        pbs_processor: 'vmem=16g'
        pbs_walltime: 'walltime=5:00:00'
    python:
        name: 'Python'
        path: '/opt/conda/bin/python'
        pbs_queue: 'mindscope'
        pbs_processor: 'vmem=16g'
        pbs_walltime: 'walltime=5:00:00'
run_states:
    - "PENDING"
    - "QUEUED"
    - "RUNNING"
    - "FINISHED_EXECUTION"
    - "FAILED_EXECUTION"
    - "FAILED"
    - "SUCCESS"
    - "PROCESS_KILLED"
workflows:
    em_2d_montage_point_match:
        states:
            - key: "create_tile_pairs"
              label: "Create Tile Pairs"
              class: "development.strategies.create_tile_pairs_strategy.CreateTilePairsStrategy"
              enqueued_class: "development.models.EMMontageSet"
              executable: "mock"
            - key: "2d_montage_point_match"
              label: "2D Montage Point Match"
              class: "development.strategies.two_d_montage_point_match_strategy.TwoDMontagePointMatchStrategy"
              enqueued_class: "development.models.EMMontageSet"
              executable: "mock"
            - key: "solver"
              label: "2D Montage Solver"
              class: "development.strategies.two_d_montage_solver_strategy.TwoDMontageSolverStrategy"
              enqueued_class: "development.models.EMMontageSet"
              executable: "mock"
            - key: "manual_qc"
              label: "Manual QC / High Degree Polynomial or Point Match Regeneration"
              manual: true
              class: "development.strategies.manual_q_c_strategy.ManualQCStrategy"
              enqueued_class: "development.models.EMMontageSet"
              executable: "mock"
            - key: "alignment"
              label: "Alignment"
              workflow: true
        graph:
            - [ "create_tile_pairs", [ "2d_montage_point_match" ] ]
            - [ "2d_montage_point_match", [ "solver" ] ]
            - [ "solver", [ "manual_qc" ] ]
            - [ "manual_qc", [ "alignment" ] ]
    em_2d_montage:
        states:
            - key: "mic_task_builder"
              label: "Multiplicative Intensity Correction Task Builder"
              class: "development.strategies.m_i_c_task_builder_strategy.MICTaskBuilderStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "mic_tasks"
              parallel: true
              label: "Multiplicative Intensity Correction Tasks"
              class: "development.strategies.m_i_c_tasks_strategy.MICTasksStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
        graph:
            - [ "mic_task_builder", [ "mic_tasks" ] ]
    at_2d_montage:
        states:
            - key: "at_mic_task_builder"
              label: "Multiplicative Intensity Task Builder"
              class: "development.strategies.m_i_c_task_builder_strategy.MICTaskBuilderStrategy"
              enqueued_class: "development.models.ATMontageSet"
              executable: "mock"
            - key: "at_mic_tasks"
              parallel: true
              label: "AT Multiplicative Intensity Correction Tasks"
              class: "development.strategies.at_m_i_c_tasks_strategy.ATMICTasksStrategy"
              enqueued_class: "development.models.ATMontageSet"
              executable: "mock"
        graph:
            - [ "at_mic_task_builder", [ "at_mic_tasks" ] ]
