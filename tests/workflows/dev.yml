executables:
    mock:
        name: 'Mock Executable'
        path: '/data/aibstemp/timf/example_data/bin/mock_executable'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=128g'
        pbs_walltime: 'walltime=1:00:00'

    generate_em_tilespecs_from_metafile:
        name: 'EM Create Tilespecs'
        path: 'python'
        args:
        - '-m'
        - "rendermodules.dataimport.generate_EM_tilespecs_from_metafile"
        environment:
        - RENDER_CLIENT_JAR=/allen/aibs/pipeline/image_processing/volume_assembly/render-jars/staging/render-ws-java-client-standalone.jar
        - RENDER_JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=128g'
        pbs_walltime: 'walltime=5:00:00'

    generate_lens_correction:
        name: 'Generate Lens Correction'
        path: 'python'
        args:
        - '-m'
        - "rendermodules.lens_correction.lens_correction"
        environment:
        - RENDER_CLIENT_JAR=/allen/aibs/pipeline/image_processing/volume_assembly/render-jars/staging/render-ws-java-client-standalone.jar
        - RENDER_JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'

    move_tile_set:
        name: 'Move Tile Set'
        path: 'python'
        args:
        - '-m'
        - 'workflow_client.modules.move_directory'
        environment:
        - PYTHONPATH=/data/aibstemp/timf/example_data/at_em_imaging_workflow
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=32g,nodes=1:ppn=2'
        pbs_walltime: 'walltime=2:00:00'

    apply_lens_correction:
        name: 'Apply Lens Correction'
        path: 'python'
        args:
        - '-m'
        - "rendermodules.lens_correction.apply_lens_correction"
        environment:
        - RENDER_CLIENT_JAR=/allen/aibs/pipeline/image_processing/volume_assembly/render-jars/staging/render-ws-java-client-standalone.jar
        - RENDER_JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'

    generate_point_matches:
        name: 'EM 2D Generate Point Matches'
        path: 'python'
        args:
        - '-m'
        - "rendermodules.pointmatch.generate_point_matches_spark"
        environment:
        - RENDER_CLIENT_JAR=/allen/aibs/pipeline/image_processing/volume_assembly/render-jars/staging/render-ws-java-client-standalone.jar
        - RENDER_JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        - JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'

    em_2d_solver:
        name: 'EM 2D Solver'
        path: 'python'
        args:
        - '-m'
        - "rendermodules.montage.run_montage_job_for_section"
        environment:
        - 'MCRROOT=/allen/aibs/pipeline/image_processing/volume_assembly/MATLAB_Runtime/v91'
        - 'LD_LIBRARY_PATH=${MCRROOT}/runtime/glnxa64:${MCRROOT}/bin/glnxa64:${MCRROOT}/sys/os/glnxa64:${MCRROOT}/sys/opengl/lib/glnxa64'
        - RENDER_CLIENT_JAR=/allen/aibs/pipeline/image_processing/volume_assembly/render-jars/staging/render-ws-java-client-standalone.jar
        - RENDER_JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=15:00:00'

    generate_mipmaps:
        name: 'Generate MIPmaps'
        path: 'python'
        args:
        - '-m'
        - "rendermodules.dataimport.generate_mipmaps"
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'

    apply_mipmaps:
        name: 'Apply MIPmaps'
        path: 'python'
        environment:
        - RENDER_CLIENT_JAR=/allen/aibs/pipeline/image_processing/volume_assembly/render-jars/staging/render-ws-java-client-standalone.jar
        - RENDER_JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        args:
        - '-m'
        - "rendermodules.dataimport.apply_mipmaps_to_render"
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'

    create_tilepairs:
        name: 'Create Tile Pairs'
        path: 'python'
        environment:
        - RENDER_CLIENT_JAR=/allen/aibs/pipeline/image_processing/volume_assembly/render-jars/staging/render-ws-java-client-standalone.jar
        - RENDER_JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        args:
        - '-m'
        - "rendermodules.pointmatch.create_tilepairs"
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'

    detect_montage_defects:
        name: 'Detect Montage Defects'
        path: 'python'
        environment:
        - RENDER_CLIENT_JAR=/allen/aibs/pipeline/image_processing/volume_assembly/render-jars/staging/render-ws-java-client-standalone.jar
        - RENDER_JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        args:
        - '-m'
        - "rendermodules.em_montage_qc.detect_montage_defects"
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'

    downsample:
        name: 'Downsample'
        path: 'python'
        environment:
        - RENDER_CLIENT_JAR=/allen/aibs/pipeline/image_processing/volume_assembly/render-jars/staging/render-ws-java-client-standalone.jar
        - RENDER_JAVA_HOME=/shared/utils.x86_64/jdk_8u91
        args:
        - '-m'
        - "rendermodules.materialize.render_downsample_sections"
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'
        
    calculate_multiplicative_correction:
        name: 'Calculate Multiplicative Correction'
        path: 'python'
        args:
        - '-m'
        - "rendermodules.intensity_correction.calculate_multiplicative_correction"
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'

    apply_multiplicative_correction:
        name: 'Apply Multiplicative Correction'
        path: 'python'
        args:
        - '-m'
        - "rendermodules.intensity_correction.apply_multiplicative_correction"
        remote_queue: 'pbs'
        pbs_queue: 'emconnectome'
        pbs_processor: 'mem=192g,nodes=1:ppn=32'
        pbs_walltime: 'walltime=5:00:00'

run_states:
    - "PENDING"
    - "QUEUED"
    - "RUNNING"
    - "FINISHED_EXECUTION"
    - "FAILED_EXECUTION"
    - "FAILED"
    - "SUCCESS"
    - "PROCESS_KILLED"

workflows:
    em_2d_montage:
        ingest: "development.strategies.lens_correction_ingest.LensCorrectionIngest"

        states:
            - key: "ingest_tile_sets"
              label: "Ingest Tile Sets"
              class: "development.strategies.lens_correction_ingest.LensCorrectionIngest"
              enqueued_class: "development.models.tile_image_set.TileImageSet"
              executable: "mock"

            - key: "generate_lens_correction"
              label: "Generate Lens Correction Transform"
              class: "development.strategies.generate_lens_correction_transform_strategy.GenerateLensCorrectionTransformStrategy"
              enqueued_class: "development.models.reference_set.ReferenceSet"
              executable: "generate_lens_correction"

            - key: "wait_for_lens_correction"
              label: "Wait for Lens Correction"
              class: "development.strategies.wait_for_lens_correction.WaitForLensCorrection"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "mock"

            - key: "move_reference_set"
              label: "Move Reference Set"
              class: "development.strategies.move_reference_set_strategy.MoveReferenceSetStrategy"
              enqueued_class: "development.models.reference_set.ReferenceSet"
              executable: "move_tile_set"

            - key: "move_raw_montage_set"
              label: "Move Raw Montage Sets"
              class: "development.strategies.move_raw_montage_set_strategy.MoveRawMontageSetStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "move_tile_set"

            - key: "generate_em_montage"
              label: "Generate Render Stack"
              class: "development.strategies.generate_render_stack_strategy.GenerateRenderStackStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "generate_em_tilespecs_from_metafile"

            - key: "generate_mipmaps"
              label: "Generate MIPMaps"
              class: "development.strategies.generate_mip_maps_strategy.GenerateMipMapsStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "generate_mipmaps"

            - key: "apply_mipmaps"
              label: "Apply MIPMaps"
              class: "development.strategies.apply_mip_maps_strategy.ApplyMipMapsStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "apply_mipmaps"
              batch_size: 2

            - key: "apply_lens_correction_new"
              label: "Apply Lens Correction"
              class: "development.strategies.apply_lens_correction_strategy.ApplyLensCorrectionStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "apply_lens_correction"

            - key: "create_tile_pairs"
              label: "Create Tile Pairs"
              class: "development.strategies.create_tile_pairs_strategy.CreateTilePairsStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "create_tilepairs"

            - key: "2d_montage_point_match"
              label: "2D Montage Point Match"
              class: "development.strategies.two_d_montage_point_match_strategy.TwoDMontagePointMatchStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "generate_point_matches"
              batch_size: 15

            - key: "solver"
              label: "2D Montage Solver"
              class: "development.strategies.two_d_montage_solver_strategy.TwoDMontageSolverStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "em_2d_solver"
              batch_size: 5

            - key: "manual_qc"
              label: "Manual QC / High Degree Polynomial or Point Match Regeneration"
              manual: true
              class: "development.strategies.manual_q_c_strategy.ManualQCStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "detect_montage_defects"

            - key: "alignment"
              label: "Alignment"
              workflow: true

        graph:
            - [ "ingest_tile_sets", [ "generate_lens_correction", "generate_em_montage" ] ]
            - [ "generate_lens_correction", [ "move_reference_set" ] ]
            - [ "generate_em_montage", [ "generate_mipmaps" ] ]
            - [ "generate_mipmaps", [ "apply_mipmaps" ] ] 
            - [ "apply_mipmaps", [ "wait_for_lens_correction" ] ]
            - [ "move_reference_set", [ "wait_for_lens_correction" ] ]
            - [ "wait_for_lens_correction", [ "apply_lens_correction_new" ] ]
            - [ "apply_lens_correction_new", [ "create_tile_pairs" ] ]
            - [ "apply_lens_correction_new", [ "move_raw_montage_set" ] ]
            - [ "create_tile_pairs", [ "2d_montage_point_match" ] ]
            - [ "2d_montage_point_match", [ "solver" ] ]
            - [ "solver", [ "manual_qc" ] ]
            - [ "manual_qc", [ "downsample" ] ]
            - [ "downsample", [ "alignment" ] ]

    em_2d_montage_mic:
        states:
            - key: "mic_task_builder"
              label: "Multiplicative Intensity Correction Task Builder"
              class: "development.strategies.m_i_c_task_builder_strategy.MICTaskBuilderStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "calculate_multiplicative_correction"
            - key: "mic_tasks"
              parallel: true
              label: "Multiplicative Intensity Correction Tasks"
              class: "development.strategies.m_i_c_tasks_strategy.MICTasksStrategy"
              enqueued_class: "development.models.e_m_montage_set.EMMontageSet"
              executable: "apply_multiplicative_correction"
        graph:
            - [ "mic_task_builder", [ "mic_tasks" ] ]
