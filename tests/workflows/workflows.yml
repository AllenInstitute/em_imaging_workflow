executables:
    mock:
        name: 'Mock Executable'
        path: '/projects/mock_bin/mock_executable.sh'
        pbs_queue: 'mindscope'
        pbs_processor: 'vmem=16g'
        pbs_walltime: 'walltime=5:00:00'
run_states:
    - "PENDING"
    - "QUEUED"
    - "RUNNING"
    - "FINISHED_EXECUTION"
    - "FAILED_EXECUTION"
    - "FAILED"
    - "SUCCESS"
    - "PROCESS_KILLED"
workflows:
    lens_correction2:
        states:
            - key: "ingest"
              label: "Ingest Reference Set"
              class: "development.strategies.ingest_reference_set_strategy.IngestReferenceSetStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "generate"
              label: "generate_lens_correction_transform"
              class: "development.strategies.generate_lens_correction_transform_strategy.GenerateLensCorrectionTransformStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "move"
              label: "move_reference_set_files_to_long_term_storage"
              enqueued_class: "development.models.ReferenceSet"
              class: "development.strategies.move_reference_set_strategy.MoveReferenceSetStrategy"
              executable: "mock"
        graph:
            - [ "ingest", [ "generate" ] ]
            - [ "generate", [ "move" ] ]
            - [ "move", [] ]
    em_2d_montage:
        states:
            - key: "ingest_generate"
              label: "Ingest / Generate Render Stack"
              class: "development.strategies.ingest_generate_render_stack_strategy.IngestGenerateRenderStackStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "mic_task_builder"
              label: "Multiplicative Intensity Correction Task Builder"
              class: "development.strategies.m_i_c_task_builder_strategy.MICTaskBuilderStrategy"
              executable: "mock"
            - key: "mic_tasks"
              parallel: true
              label: "Multiplicative Intensity Correction Tasks"
              class: "development.strategies.m_i_c_tasks_strategy.MICTasksStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "generate_mipmaps"
              label: "Generate MipMaps / Write to SAN"
              class: "development.strategies.generate_mip_maps_strategy.GenerateMipMapsStrategy"
              executable: "mock"
            - key: "long_term_storage"
              label: "Move Raw Montage Set Files to Long Term Storage"
              class: "development.strategies.move_raw_montage_set_strategy.MoveRawMontageSetStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "lens_correction"
              label: "Apply Lens Correction"
              class: "development.strategies.apply_lens_correction_strategy.ApplyLensCorrectionStrategy"
              executable: "mock"
            - key: "2d_montage_point_match"
              label: "2D Montage Point Match"
              class: "development.strategies.two_d_montage_point_match_strategy.TwoDMontagePointMatchStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "solver"
              label: "2D Montage Solver"
              class: "development.strategies.two_d_montage_solver_strategy.TwoDMontageSolverStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "manual_qc"
              label: "Manual QC / High Degree Polynomial or Point Match Regeneration"
              manual: true
              class: "development.strategies.manual_q_c_strategy.ManualQCStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "alignment"
              label: "Alignment"
              workflow: true
        graph:
            - [ "ingest_generate", [ "mic_task_builder" ] ]
            - [ "mic_task_builder", [ "mic_tasks" ] ]
            - [ "mic_tasks", [ "generate_mipmaps" ] ]
            - [ "generate_mipmaps", [ "long_term_storage", "lens_correction" ] ]
            - [ "lens_correction", [ "2d_montage_point_match" ] ]
            - [ "2d_montage_point_match", [ "solver" ] ]
            - [ "solver", [ "manual_qc" ] ]
            - [ "manual_qc", [ "alignment" ] ]
    at_2d_montage:
        states:
            - key: "ingest"
              label: "Ingest"
              class: "development.strategies.ingest_2d_montage_strategy.Ingest2DMontageStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "mic_task_builder"
              label: "Multiplicative Intensity Task Builder"
              class: "development.strategies.m_i_c_task_builder_strategy.MICTaskBuilderStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "mic_tasks"
              parallel: true
              label: "Multiplicative Intensity Correction Tasks"
              executable: "mock"
            - key: "lens_correction"
              label: "Assign Lens Correction"
              executable: "mock"
            - key: "generate_mipmaps"
              label: "Generate MipMaps / Write to SAN"
              executable: "mock"
            - key: "long_term_storage"
              label: "Transfer Raw Montage Set Files to Long Term Storage"
              executable: "mock"
            - key: "cross_correlation"
              label: "Cross Correlation"
              executable: "mock"
            - key: "montage_qc"
              label: "AT 2D Montage QC"
              executable: "mock"
            - key: "drop_fails"
              label: "Drop Failing Tiles / No Action if Passes QC"
              executable: "mock"
            - key: "stitch"
              label: "Stitch Synthetic Point Matches"
              executable: "mock"
            - key: "registration"
              label: "Registration / No Action w/o Ref Staining Session"
              executable: "mock"
            - key: "assign_z"
              label: "Assign Z"
              manual: true
            - key: "alignment"
              label: "Alignment"
              workflow: true
        graph:
            - [ "ingest", [ "mic_task_builder" ] ]
            - [ "mic_task_builder", [ "mic_tasks" ] ]
            - [ "mic_tasks", [ "lens_correction" ] ]
            - [ "lens_correction", [ "generate_mipmaps" ] ]
            - [ "generate_mipmaps", [ "long_term_storage" ] ]
            - [ "long_term_storage", [ "cross_correlation" ] ]
            - [ "cross_correlation", [ "montage_qc" ] ]
            - [ "montage_qc", [ "drop_fails" ] ]
            - [ "drop_fails", [ "stitch" ] ]
            - [ "stitch", [ "registration" ] ]
            - [ "registration", [ "assign_z" ] ]
            - [ "assign_z", [ "alignment" ] ]
    alignment:
        states:
            - key: "define_chunks"
              label: "Assign Montage Set to Chunk(s)"
              class: "development.strategies.define_chunks_strategy.DefineChunksStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "downsample_section_image"
              label: "Downsample Section Image"
              class: "development.strategies.downsample_section_image_strategy.DownsampleSectionImageStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "rough_point_generation"
              label: "Rough Point Match Generation"
              class: "development.strategies.point_match_generation_strategy.PointMatchGenerationStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "rough_solver"
              label: "Rough Solver"
              class: "development.strategies.rough_solver_strategy.RoughSolverStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "rough_qc"
              label: "Rough Alignment QC"
              manual: true
              class: "development.strategies.RoughQCStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "rough_align_application"
              label: "Rough Alignment Application"
              class: "development.strategies.rough_alignment_strategy.RoughAlignmentStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "fine_point_generation"
              label: "Fine Point Match Generation"
              class: "development.strategies.fine_point_match_generation_strategy.FinePointMatchGenerationStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "fine_point_match_qc"
              label: "Point Match QC"
              class: "development.strategies.fine_q_c_strategy.FineQCStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "consolidate"
              label: "Consolidate Transformations in the Stack"
              class: "development.strategies.consolidate_strategy.ConsolidateStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "fine_solver"
              label: "Fine Solver"
              class: "development.strategies.fine_solver_strategy.FineSolverStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "fine_align_qc"
              label: "Fine Alignment QC"
              class: "development.strategies.fine_alignment_q_c_strategy.FineAlignmentQCStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "stack_splitter"
              label: "Stack Splitter"
              class: "development.strategies.stack_splitter_strategy.StackSplitterStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "reversion"
              label: "Stack Split Reversion"
              class: "development.strategies.stack_split_reversion_strategy.StackSplitReversionStrategy"
              enqueued_class: "development.models.ReferenceSet"
              executable: "mock"
            - key: "fusion"
              label: "Fusion"
              class: "development.strategies.fusion_strategy.FusionStrategy"
              enqueued_class: "development.models.ReferenceSet"
              workflow: true
        graph:
            - [ "define_chunks", [ "downsample_section_image" ] ]
            - [ "downsample_section_image", [ "rough_point_generation" ] ]
            - [ "rough_point_generation", [ "rough_solver" ] ]
            - [ "rough_solver", [ "rough_qc" ] ]
            - [ "rough_qc", [ "rough_align_application" ] ]
            - [ "rough_align_application", [ "fine_point_generation" ] ]
            - [ "fine_point_generation", [ "fine_point_match_qc" ] ]
            - [ "fine_point_match_qc", [ "consolidate" ] ]
            - [ "consolidate", [ "fine_solver" ] ]
            - [ "fine_solver", [ "fine_align_qc" ] ]
            - [ "fine_align_qc", [ "stack_splitter" ] ]
            - [ "stack_splitter", [ "reversion" ] ]
            - [ "reversion", [ "fusion" ] ]
    fusion:
        states:
            - key: "ready"
              label: "Adjacent Chunk Ready for Fusing?"
            - key: "register"
              label: "Register Adjacent Chunks"
            - key: "manual_qc"
              label: "Manual QC"
              manual: true
            - key: "manual_global_fusion"
              label: "Manual Global Fusion"
              manual: true
            - key: "render_volume"
              label: "Render Volume"
              manual: true
        graph:
            - [ "ready", [ "register" ] ]
            - [ "register", [ "manual_qc" ] ]
            - [ "manual_qc", [ "manual_global_fusion" ] ]
            - [ "manual_global_fusion", [ "render_volume" ] ]
